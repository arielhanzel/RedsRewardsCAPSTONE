{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"login\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Login\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"login-container\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Log In\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.login && $options.login(...args), [\"prevent\"])),\n    class: \"login-form\"\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: \"username\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.username = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.username]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    placeholder: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]]), _hoisted_4], 32 /* HYDRATE_EVENTS */)])]);\n}","map":{"version":3,"names":["class","_createElementVNode","type","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","onSubmit","_cache","_withModifiers","args","$options","login","placeholder","$data","username","$event","required","password","_hoisted_4"],"sources":["C:\\Users\\mattl\\Desktop\\RedsRewardsCAPSTONE\\RedsRewardsCAPSTONE\\vue_cli_frontend\\src\\views\\LoginView.vue"],"sourcesContent":["<template>\r\n  <div class=\"login\">\r\n    <h2>Login</h2>\r\n    <div class=\"login-container\">\r\n      <form @submit.prevent=\"login\" class=\"login-form\">\r\n        <input type=\"text\" placeholder=\"username\" v-model=\"username\" required />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"password\"\r\n          v-model=\"password\"\r\n          required\r\n        />\r\n        <button type=\"submit\">Log In</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style>\r\n.login {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 60vh;\r\n}\r\n\r\n.login h2 {\r\n  font-size: 3rem;\r\n  margin-bottom: 1rem;\r\n  color: rgb(255, 0, 0);\r\n  margin-bottom: -50px;\r\n}\r\n\r\n.login-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 50vh;\r\n}\r\n\r\n.login-form {\r\n  padding: 20px;\r\n  border: 2px solid #ccc;\r\n  border-radius: 10px;\r\n  background-color: rgba(0, 0, 0, 0);\r\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.2);\r\n  width: 300px;\r\n  text-align: center;\r\n}\r\n\r\ninput[type=\"text\"],\r\ninput[type=\"password\"] {\r\n  width: 100%;\r\n  padding: 12px 20px;\r\n  margin: 8px 0;\r\n  display: inline-block;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  box-sizing: border-box;\r\n}\r\n\r\nbutton[type=\"submit\"] {\r\n  font-weight: bold;\r\n  font-size: larger;\r\n  height: 30px;\r\n  width: 100%;\r\n  color: white;\r\n  border: none;\r\n  background-color: rgb(255, 0, 0);\r\n  margin-top: 10px;\r\n  border-radius: 15px;\r\n  cursor: pointer;\r\n  transition: 0.4s;\r\n}\r\n\r\nbutton[type=\"submit\"]:hover {\r\n  color: red;\r\n  background-color: white;\r\n}\r\n</style>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      username: \"\",\r\n      password: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    login() {\r\n      // Need backend implementation\r\n      if (this.username === \"username\" && this.password === \"password\") {\r\n        // Successfull login if username = \"username\" and password = \"password\"\r\n        alert(\"Login successful!\");\r\n      } else {\r\n        // Failed login\r\n        alert(\"Invalid username or password\");\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAO;gCAChBC,mBAAA,CAAc,YAAV,OAAK;;EACJD,KAAK,EAAC;AAAiB;gCASxBC,mBAAA,CAAqC;EAA7BC,IAAI,EAAC;AAAQ,GAAC,QAAM;;;uBAXlCC,mBAAA,CAcM,OAdNC,UAcM,GAbJC,UAAc,EACdJ,mBAAA,CAWM,OAXNK,UAWM,GAVJL,mBAAA,CASO;IATAM,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAUC,QAAA,CAAAC,KAAA,IAAAD,QAAA,CAAAC,KAAA,IAAAF,IAAA,CAAK;IAAEV,KAAK,EAAC;sBAClCC,mBAAA,CAAwE;IAAjEC,IAAI,EAAC,MAAM;IAACW,WAAW,EAAC,UAAU;+DAAUC,KAAA,CAAAC,QAAQ,GAAAC,MAAA;IAAEC,QAAQ,EAAR;iDAAVH,KAAA,CAAAC,QAAQ,E,mBAC3Dd,mBAAA,CAKE;IAJAC,IAAI,EAAC,UAAU;IACfW,WAAW,EAAC,UAAU;+DACbC,KAAA,CAAAI,QAAQ,GAAAF,MAAA;IACjBC,QAAQ,EAAR;iDADSH,KAAA,CAAAI,QAAQ,E,GAGnBC,UAAqC,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}